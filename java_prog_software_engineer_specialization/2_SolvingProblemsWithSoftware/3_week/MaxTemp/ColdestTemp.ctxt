#BlueJ class context
comment0.target=ColdestTemp
comment1.params=
comment1.target=void\ test_Ave_Temp_High_Humidity_InFile()
comment10.params=
comment10.target=java.lang.String\ fileWithColdestTemperature()
comment11.params=
comment11.target=void\ testFileWithColdestTemperature()
comment12.params=parser
comment12.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment13.params=currentRow\ coldestRow
comment13.target=org.apache.commons.csv.CSVRecord\ coldestSoFar(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment14.params=
comment14.target=void\ testColdestHourInFile()
comment2.params=parser\ value
comment2.target=double\ averageTempWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment3.params=
comment3.target=void\ test_Ave_Temp_In_File()
comment4.params=parser
comment4.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment5.params=
comment5.target=void\ test_Humidity_Many_Files()
comment6.params=currentRow\ humidityRow
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumiditySoFar(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment7.params=
comment7.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment8.params=parser
comment8.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment9.params=
comment9.target=void\ testLowestHumidityInFile()
numComments=15
